// Code generated by mockery v0.0.0-dev. DO NOT EDIT.

package webhook

import mock "github.com/stretchr/testify/mock"

// MockRepository is an autogenerated mock type for the Repository type
type MockRepository struct {
	mock.Mock
}

// GetByID provides a mock function with given fields: id
func (_m *MockRepository) GetByID(id int) (*Webhook, error) {
	ret := _m.Called(id)

	var r0 *Webhook
	if rf, ok := ret.Get(0).(func(int) *Webhook); ok {
		r0 = rf(id)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*Webhook)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(int) error); ok {
		r1 = rf(id)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// GetByTxIDAndCustomerID provides a mock function with given fields: txID, customerID
func (_m *MockRepository) GetByTxIDAndCustomerID(txID int, customerID int) (*Webhook, error) {
	ret := _m.Called(txID, customerID)

	var r0 *Webhook
	if rf, ok := ret.Get(0).(func(int, int) *Webhook); ok {
		r0 = rf(txID, customerID)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*Webhook)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(int, int) error); ok {
		r1 = rf(txID, customerID)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// List provides a mock function with given fields: id
func (_m *MockRepository) List(id int) ([]Webhook, error) {
	ret := _m.Called(id)

	var r0 []Webhook
	if rf, ok := ret.Get(0).(func(int) []Webhook); ok {
		r0 = rf(id)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]Webhook)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(int) error); ok {
		r1 = rf(id)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// Save provides a mock function with given fields: wh
func (_m *MockRepository) Save(wh *Webhook) (int, error) {
	ret := _m.Called(wh)

	var r0 int
	if rf, ok := ret.Get(0).(func(*Webhook) int); ok {
		r0 = rf(wh)
	} else {
		r0 = ret.Get(0).(int)
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(*Webhook) error); ok {
		r1 = rf(wh)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}
